[
  {
    "title": "이 회원의 모든 카드번호를 구하여라.",
    "schema": "cards_held(mem_id, card_id)",
    "situation": "팀장: '우리 회원별 카드 보유현황도 모르고 뭐 하고 있는 거야? M0001 고객 카드 리스트 당장 뽑아봐.'\n당신은 주니어보드 멤버다. 갑작스러운 요청에 쿼리를 빠르게 작성해야 한다.",
    "answer": "SELECT card_id FROM cards_held WHERE mem_id = 'M0001';",
    "columns": [
      "card_id"
    ],
    "hints": [
      "1. 카드보유 테이블은 cards_held입니다.",
      "2. 특정 회원의 카드번호를 찾기 위해서는 WHERE mem_id = 'M0001' 조건이 필요합니다.",
      "3. SELECT card_id만 출력하면 됩니다.",
      "4. 중복 데이터는 없으므로 DISTINCT는 사용하지 않아도 됩니다."
    ]
  },
  {
    "title": "가맹점번호 'P0001'의 2024년 5월 매출 총합을 구하시오.",
    "schema": "sales(mem_id, card_id, prt_id, tx_date, trn_id, cancel_yn, sale_amt)",
    "situation": "사장님이 올리브영과 제휴를 논의 중이다. 팀장이: 'P0001 가맹점 5월 매출 데이터 없으면 미팅 못 나가!'라고 닥달한다.\n당신은 주니어보드 멤버로 매출 데이터를 긴급 조회해야 한다.",
    "answer": "SELECT SUM(sale_amt) FROM sales WHERE prt_id = 'P0001' AND tx_date BETWEEN '2024-05-01' AND '2024-05-31';",
    "columns": [
      "sum"
    ],
    "hints": [
      "1. 매출 데이터는 sales 테이블에서 확인할 수 있습니다.",
      "2. 가맹점 번호는 prt_id, 거래일자는 tx_date, 매출금액은 sale_amt 컬럼입니다.",
      "3. 5월 매출을 추출하려면 날짜 조건은 '2024-05-01'부터 '2024-05-31'로 설정해야 합니다.",
      "4. 집계 함수 SUM(sale_amt)를 사용하여 총 매출을 구하세요.",
      "5. WHERE 조건은 반드시 prt_id와 날짜 범위 둘 다 포함되어야 합니다."
    ]
  },
  {
    "title": "2024년 4월에 가맹점 '00001'에서 승인되었고, 앱푸시와 LMS 모두 동의한 고객을 찾아라.",
    "schema": "approvals(mem_id, card_id, prt_id, tx_date, trn_id), marketing_consents(mem_id, app_push_yn, lms_yn)",
    "situation": "팀장: '마케팅 대상 추출해야 하니까 앱푸시랑 LMS 둘 다 동의한 고객만 필터해!'\n당신은 주니어보드 멤버고, 승인내역과 마케팅 테이블을 JOIN해서 분석해야 한다.",
    "answer": "SELECT DISTINCT a.mem_id FROM approvals a JOIN marketing_consents m ON a.mem_id = m.mem_id WHERE a.prt_id = '00001' AND a.tx_date BETWEEN '2024-04-01' AND '2024-04-30' AND m.app_push_yn = 'Y' AND m.lms_yn = 'Y';",
    "columns": [
      "mem_id"
    ],
    "hints": [
      "1. 승인내역은 approvals 테이블에 있습니다.",
      "2. 마케팅 수신 동의 여부는 marketing_consents 테이블에서 확인합니다.",
      "3. 두 테이블을 mem_id로 JOIN해야 합니다.",
      "4. app_push_yn과 lms_yn이 모두 'Y'인 고객만 필터링하세요.",
      "5. 2024년 4월은 '2024-04-01'부터 '2024-04-30'입니다."
    ]
  },
  {
    "title": "AOS를 사용하는 정상상태의 20대 회원 수를 구하시오.",
    "schema": "members(mem_id, age, device, status)",
    "situation": "팀장: '20대 AOS 사용자만 타겟팅해서 보고서 작성해!' 갑작스러운 요청이다.\n당신은 주니어보드 멤버로, 회원 상태와 나이, 디바이스 필터링이 필요하다.",
    "answer": "SELECT COUNT(*) FROM members WHERE device = 'aos' AND status = '정상' AND age BETWEEN 20 AND 29;",
    "columns": [
      "count"
    ],
    "hints": [
      "1. 회원 정보는 members 테이블에 있습니다.",
      "2. 디바이스는 device 컬럼, 상태는 status 컬럼으로 구분합니다.",
      "3. 나이는 age 컬럼을 사용하며 BETWEEN 20 AND 29로 조건을 줄 수 있습니다.",
      "4. COUNT(*)로 해당 조건에 맞는 인원 수를 구하세요."
    ]
  },
  {
    "title": "어제 클릭코드가 'ins_tapp_AIACS'인 고객 중 AIA 생명 결제 페이지를 방문한 고객 수를 구하라.",
    "schema": "channel_logs(mem_id, click_code, screen_id, tx_date)",
    "situation": "사장님: 'AIA랑 협업 어떻게 되고 있는지 트래픽 좀 봐봐!' 팀장이 이를 받고 당신에게 급히 요청했다.\n주니어보드인 당신은 클릭 로그 데이터를 분석해야 한다.",
    "answer": "SELECT COUNT(DISTINCT mem_id) FROM channel_logs WHERE click_code = 'ins_tapp_AIACS' AND log_date = date('now', '-1 day') AND screen_id = 'aia_payment';",
    "columns": [
      "count"
    ],
    "hints": [
      "1. 클릭 로그는 channel_logs 테이블에서 확인합니다.",
      "2. 클릭코드는 click_code, 화면 ID는 screen_id 컬럼입니다.",
      "3. 어제 날짜는 date('now', '-1 day')로 계산할 수 있습니다.",
      "4. 중복을 제거하려면 COUNT(DISTINCT mem_id)를 사용하세요."
    ]
  }
]